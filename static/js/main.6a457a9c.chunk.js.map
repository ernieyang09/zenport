{"version":3,"sources":["store/modules/ui/index.js","container/Stepper.js","store/modules/form/index.js","styles/pages.js","container/Step1.js","store/modules/dishes/index.js","container/Step2.js","container/Step3.js","container/Step4.js","components/Page.js","components/OrderInput.js","App.js","store/modules/index.js","store/index.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["PREVSTEP","NEXTSTEP","uiSelector","state","ui","initState","step","clickPrevStep","type","clickNextStep","uiReducer","action","Stepper","useMappedState","Steps","current","small","Item","title","SETMEAL","SETRESTAURANT","SETORDER","meal","number","restaurant","orders","key","dish","quantity","formSelector","form","setRestaurant","restaurantData","payload","setOrder","orderData","formReducer","ButtonPanel","styled","div","ErrMsg","p","Step1","dispatch","useDispatch","useState","select","setSelect","inputNumber","setInputNumber","valid","setValid","SelectPicker","data","label","value","searchable","onChange","val","InputNumber","min","Button","onClick","validate","dishes","dishesSelector","dishesReducer","Step2","mapState","useCallback","restaurants","filter","d","availableMeals","some","m","map","Set","r","data-test-id","Step3","id","name","currentOrder","setCurrentOrder","tempCount","useRef","length","AddButton","DelButton","o","onChangeQuantity","parseInt","k","order","onChangeOrder","ControlBtn","err","Map","total","forEach","has","get","push","set","result","entries","arr","reduce","s","Object","keys","Step4","Panel","header","bordered","console","log","Notification","description","Page","props","children","OrderInput","max","App","renderSwitch","rootReducer","combineReducers","configureStore","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","store","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a457a9c.chunk.js","sourcesContent":["// @flow\nimport type {\n  ActionWithoutPayloadType,\n} from 'types';\n\nconst prefix = 'UI';\n\nconst PREVSTEP = `${prefix}/PREVSTEP`;\nconst NEXTSTEP = `${prefix}/NEXTSTEP`;\n\n\ntype UIState = {\n  step: number,\n};\n\ntype PrevStepActionType = ActionWithoutPayloadType<typeof PREVSTEP>;\ntype NextStepActionType = ActionWithoutPayloadType<typeof NEXTSTEP>;\n\nexport type UIAction = PrevStepActionType | NextStepActionType\n\nexport const uiSelector = (state: Object): UIState => state.ui;\n\n\nconst initState: UIState = {\n  step: 0\n}\n\n\nconst uiReducer = (state: UIState = {...initState}, action: UIAction): UIState => {\n  switch (action.type) {\n    case PREVSTEP:\n      return {\n        ...state,\n        step: state.step - 1,\n      }\n    case NEXTSTEP:\n      return {\n        ...state,\n        step: state.step + 1,\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport const clickPrevStep = (): PrevStepActionType => ({\n  type: PREVSTEP,\n})\n\nexport const clickNextStep = (): NextStepActionType => ({\n  type: NEXTSTEP,\n})\n\n\nexport default uiReducer;\n","import React from 'react'\nimport { Steps } from 'rsuite';\nimport {useMappedState} from 'redux-react-hook';\n\nimport { uiSelector } from 'store/modules/ui';\n\nconst Stepper = () => {\n  const { step } = useMappedState(uiSelector);\n\n  return (\n    <Steps current={step} small>\n      <Steps.Item title=\"Step1\" />\n      <Steps.Item title=\"Step2\" />\n      <Steps.Item title=\"Step3\" />\n      <Steps.Item title=\"Step4\" />\n    </Steps>\n  )\n}\n\nexport default Stepper;\n","// @flow\nimport type {\n  ActionWithPayloadType,\n} from 'types';\n\n\nconst prefix = 'FORM';\nexport const SETMEAL = `${prefix}/SETMEAL`;\nexport const SETRESTAURANT = `${prefix}/SETRESTAURANT`;\nexport const SETORDER = `${prefix}/SETORDER`;\n\ntype Dish = {\n  id: number,\n  name: String,\n};\n\ntype Order = {\n  key: number,\n  dish: ?Dish,\n  quantity: number,\n};\n\ntype FormState = {\n  meal: ?string,\n  number: number,\n  restaurant: ?string,\n  orders: Array<Order>,\n};\n\n\n\ntype MealData = {| meal: string, number: number |};\ntype RestaurantData = {| restaurant: ?string |};\ntype OrderData = {| orders: Array<Order> |};\n\nexport type FormData = MealData | RestaurantData | OrderData;\n\ntype SetMealActionType = ActionWithPayloadType<typeof SETMEAL, MealData>;\ntype SetRestaurantActionType = ActionWithPayloadType<typeof SETRESTAURANT, RestaurantData >;\ntype SetOrderActionType = ActionWithPayloadType<typeof SETORDER, OrderData >;\n\nexport type FormAction = SetMealActionType | SetRestaurantActionType | SetOrderActionType\n\n\nexport const initState = {\n  meal: null,\n  number: 1,\n  restaurant: null,\n  orders: [{ key: 0, dish: null, quantity: 1 }],\n}\n\nexport const formSelector = (state: Object): FormState => state.form;\n\n\nconst formReducer = (state: FormState = {...initState}, action: FormAction): FormState => {\n  switch (action.type) {\n    case SETMEAL:\n    case SETRESTAURANT:\n    case SETORDER:\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state;\n  }\n}\n\n\nexport const setMeal = (mealData: MealData): SetMealActionType => ({\n  type: SETMEAL,\n  payload: mealData,\n});\n\nexport const setRestaurant = (restaurantData: RestaurantData ): SetRestaurantActionType => ({\n  type: SETRESTAURANT,\n  payload: restaurantData,\n});\n\nexport const setOrder = (orderData: OrderData): SetOrderActionType => ({\n  type: SETORDER,\n  payload: orderData,\n})\n\n\nexport default formReducer;\n","import styled from '@emotion/styled';\n\n\nexport const ButtonPanel = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 15px;\n`\n\nexport const ErrMsg = styled.p`\n  color: red;\n  margin: 3px 0;\n`\n","import React, { useState } from 'react';\nimport { SelectPicker, InputNumber, Button } from 'rsuite';\nimport { useMappedState ,useDispatch} from 'redux-react-hook';\n\nimport {\n  clickNextStep,\n} from 'store/modules/ui';\n\nimport {\n  formSelector,\n  setMeal,\n} from 'store/modules/form';\n\nimport {\n  ButtonPanel,\n  ErrMsg,\n} from 'styles/pages';\n\nconst Step1 = () => {\n  const dispatch = useDispatch();\n  const { meal, number } = useMappedState(formSelector);\n\n  const [select, setSelect] = useState(meal);\n  const [inputNumber, setInputNumber] = useState(number);\n  const [valid, setValid] = useState({ meal: true, number: true });\n\n  const validate = () => {\n    const meal = (select !== null);\n    const number = (inputNumber !== 0);\n    setValid({ meal, number });\n    return meal && number;\n  }\n  \n  return (\n    <div>\n      <div>\n        <div>Please select a meal</div>\n        <div>\n          <SelectPicker\n            data={[\n              {\n                label: 'breakfast',\n                value: 'breakfast',\n              },\n              {\n                label: 'lunch',\n                value: 'lunch',\n              },\n              {\n                label: 'dinner',\n                value: 'dinner',\n              }\n            ]}\n            searchable={false}\n            value={select}\n            onChange={(val) => { setSelect(val); }}\n          />\n        </div>\n        {\n          !valid.meal && <ErrMsg>Please select a meal</ErrMsg>\n        }\n      </div>\n      <div>\n        <div>Please Enter Number of people</div>\n        <div>\n          <InputNumber\n            value={inputNumber}\n            min={1}\n            onChange={(val) => { setInputNumber(val); }}\n          />\n        </div>\n        {\n          !valid.number && <div>Please input the number</div>\n        }\n        \n      </div>\n      <ButtonPanel>\n        <div></div>\n        <Button\n          onClick={()=> {\n            if (!validate()) {\n              return\n            }\n            dispatch(setMeal({ meal: select, number: inputNumber}));\n            dispatch(clickNextStep());\n          }}\n        >\n          NEXT\n        </Button>\n      </ButtonPanel>\n    </div>\n  )\n}\n\nexport default Step1;\n","// @flow\nconst dishes = [\n  {\n    \"id\": 1,\n    \"name\": \"Chicken Burger\",\n    \"restaurant\": \"Mc Donalds\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Ham Burger\",\n    \"restaurant\": \"Mc Donalds\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Cheese Burger\",\n    \"restaurant\": \"Mc Donalds\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Fries\",\n    \"restaurant\": \"Mc Donalds\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 5,\n    \"name\": \"Egg Muffin\",\n    \"restaurant\": \"Mc Donalds\",\n    \"availableMeals\": [\"breakfast\"]\n  },\n  {\n    \"id\": 6,\n    \"name\": \"Burrito\",\n    \"restaurant\": \"Taco Bell\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 7,\n    \"name\": \"Tacos\",\n    \"restaurant\": \"Taco Bell\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 8,\n    \"name\": \"Quesadilla\",\n    \"restaurant\": \"Taco Bell\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 9,\n    \"name\": \"Steak\",\n    \"restaurant\": \"BBQ Hut\",\n    \"availableMeals\": [\"dinner\"]\n  },\n  {\n    \"id\": 10,\n    \"name\": \"Yakitori\",\n    \"restaurant\": \"BBQ Hut\",\n    \"availableMeals\": [\"dinner\"]\n  },\n  {\n    \"id\": 11,\n    \"name\": \"Nankotsu\",\n    \"restaurant\": \"BBQ Hut\",\n    \"availableMeals\": [\"dinner\"]\n  },\n  {\n    \"id\": 12,\n    \"name\": \"Piman\",\n    \"restaurant\": \"BBQ Hut\",\n    \"availableMeals\": [\"dinner\"]\n  },\n  {\n    \"id\": 13,\n    \"name\": \"Vegan Bento\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"lunch\"]\n  },\n  {\n    \"id\": 14,\n    \"name\": \"Coleslaw Sandwich\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"breakfast\"]\n  },\n  {\n    \"id\": 15,\n    \"name\": \"Grilled Sandwich\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"breakfast\"]\n  },\n  {\n    \"id\": 16,\n    \"name\": \"Veg. Salad\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 17,\n    \"name\": \"Fruit Salad\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 18,\n    \"name\": \"Corn Soup\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 19,\n    \"name\": \"Tomato Soup\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 20,\n    \"name\": \"Minestrone Soup\",\n    \"restaurant\": \"Vege Deli\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 21,\n    \"name\": \"Pepperoni Pizza\",\n    \"restaurant\": \"Pizzeria\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 22,\n    \"name\": \"Pepperoni Pizza\",\n    \"restaurant\": \"Pizzeria\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 23,\n    \"name\": \"Hawaiian Pizza\",\n    \"restaurant\": \"Pizzeria\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 24,\n    \"name\": \"Seafood Pizza\",\n    \"restaurant\": \"Pizzeria\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 25,\n    \"name\": \"Deep Dish Pizza\",\n    \"restaurant\": \"Pizzeria\",\n    \"availableMeals\": [\"dinner\"]\n  },\n  {\n    \"id\": 26,\n    \"name\": \"Chow Mein\",\n    \"restaurant\": \"Panda Express\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 27,\n    \"name\": \"Mapo Tofu\",\n    \"restaurant\": \"Panda Express\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 28,\n    \"name\": \"Kung Pao\",\n    \"restaurant\": \"Panda Express\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 29,\n    \"name\": \"Wontons\",\n    \"restaurant\": \"Panda Express\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 30,\n    \"name\": \"Garlic Bread\",\n    \"restaurant\": \"Olive Garden\",\n    \"availableMeals\": [\"breakfast\", \"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 31,\n    \"name\": \"Ravioli\",\n    \"restaurant\": \"Olive Garden\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 32,\n    \"name\": \"Rigatoni Spaghetti\",\n    \"restaurant\": \"Olive Garden\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  },\n  {\n    \"id\": 33,\n    \"name\": \"Fettucine Pasta\",\n    \"restaurant\": \"Olive Garden\",\n    \"availableMeals\": [\"lunch\", \"dinner\"]\n  }\n];\n\nexport type Dish = {\n  id: number,\n  name: string,\n  restaurant: string,\n  availableMeals: Array<string>\n}\n\nexport const dishesSelector = (state: Object): Array<Dish> => state.dishes;\n\n\nconst dishesReducer = (state: Array<Dish> = dishes, action: {}) => {\n  return state;\n}\n\n\nexport default dishesReducer;\n","// @flow\nimport React, { useState, useCallback } from 'react';\nimport { SelectPicker, Button } from 'rsuite';\nimport { useMappedState ,useDispatch} from 'redux-react-hook';\n\nimport {\n  clickPrevStep,\n  clickNextStep,\n} from 'store/modules/ui';\n\nimport type {\n  UIAction,\n} from 'store/modules/ui';\n\nimport {\n  formSelector,\n  setRestaurant,\n} from 'store/modules/form';\n\nimport type {\n  FormAction,\n} from 'store/modules/form';\n\nimport {\n  dishesSelector,\n} from 'store/modules/dishes';\n\nimport type {\n  Dish\n} from 'store/modules/dishes';\n\nimport {\n  ButtonPanel,\n  ErrMsg,\n} from 'styles/pages';\n\n\n\n\n\nconst Step2 = () => {\n  const { meal, restaurant } = useMappedState(formSelector);\n\n  const mapState = useCallback((state) => {\n    const dishes: Array<Dish> = dishesSelector(state);\n    const restaurants: Array<string> = dishes\n      .filter(d => d.availableMeals.some(m => m === meal))\n      .map(d => d.restaurant)\n    return [...new Set(restaurants)]\n  }, [meal]);\n\n  const restaurants = useMappedState(mapState);\n\n  const [select, setSelect] = useState(restaurant);\n  const [valid, setValid] = useState({ restaurant: true });\n\n  const validate = () => {\n    const restaurant = (select !== null);\n    setValid({ restaurant });\n    return restaurant;\n  }\n  \n\n  const dispatch: ((FormAction | UIAction) => void) = useDispatch();\n\n\n  return (\n    <div>\n      <div>Please select a restaurant</div>\n      <div>\n        <SelectPicker\n          data={restaurants.map(r => ({ label: r, value: r }))}\n          searchable={false}\n          value={select}\n          onChange={(val: string) => { setSelect(val); }}\n        />\n      </div>\n      {\n        !valid.restaurant && <ErrMsg>Please select a restaurant</ErrMsg>\n      }\n      <ButtonPanel>\n        <Button\n          onClick={()=> {\n            dispatch(setRestaurant({ restaurant: select }));\n            dispatch(clickPrevStep());\n          }}\n        >\n          PREV\n        </Button>\n        <Button\n          data-test-id='next'\n          onClick={()=> { \n            if (!validate()) {\n              return\n            }\n            dispatch(setRestaurant({ restaurant: select }));\n            dispatch(clickNextStep());\n          }}\n        >\n          NEXT\n        </Button>\n      </ButtonPanel>\n    </div>\n  )\n}\n\nexport default Step2;\n","import React, { useState, useCallback, useRef } from 'react';\nimport { Button } from 'rsuite';\nimport { useMappedState ,useDispatch} from 'redux-react-hook';\n\nimport {\n  clickPrevStep,\n  clickNextStep,\n} from 'store/modules/ui';\n\nimport {\n  formSelector, setOrder,\n} from 'store/modules/form';\n\nimport {\n  dishesSelector,\n} from 'store/modules/dishes';\n\nimport {\n  OrderInput,\n} from 'components';\n\nimport {\n  ButtonPanel,\n  ErrMsg,\n} from 'styles/pages';\n\n\nconst Step3 = () => {\n  const { number, restaurant, orders } = useMappedState(formSelector);\n\n  const mapState = useCallback((state) => {\n    const dishes = dishesSelector(state);\n    const filterDishes = dishes\n      .filter(d => d.restaurant === restaurant)\n      .map(d => ({id: d.id, name: d.name}))\n    return filterDishes;\n  }, [restaurant]);\n\n  const dishes = useMappedState(mapState);\n  \n  const [currentOrder, setCurrentOrder] = useState(orders);\n  const [valid, setValid] = useState({});\n\n  let tempCount = useRef(currentOrder.length - 1);\n\n  const dispatch = useDispatch();\n\n  const AddButton = () => (\n    <Button\n      onClick={()=> { setCurrentOrder([...currentOrder, { key: ++tempCount.current, dish: null, quantity: 1 }]) }}\n    >\n      Add\n    </Button>\n  )\n  \n  const DelButton = ({ id }) => (\n    <Button\n      onClick={()=> { setCurrentOrder(currentOrder.filter(o => o.key !== id )) }}\n    >\n      Del\n    </Button>\n  )\n\n  const onChangeOrder = key => order => {\n    for(const o of currentOrder) {\n      if (o.key === key) {\n        o.dish = order;\n        break\n      }\n    }\n    setCurrentOrder([...currentOrder]);\n  }\n\n  const onChangeQuantity = key => number => {\n    for(const o of currentOrder) {\n      if (o.key === key) {\n        o.quantity = parseInt(number);\n        break\n      }\n    }\n    setCurrentOrder([...currentOrder]);\n  }\n\n  const validate = () => {\n    const map = new Map([[null, []]]);\n    let total = 0;\n\n    currentOrder.forEach((o) => {\n      if (!o.dish) {\n        map.get(null).push(o.key);\n      } else if (map.has(o.dish.id)) {\n        map.get(o.dish.id).push(o.key);\n      } else {\n        map.set(o.dish.id, [o.key]);\n      }\n      total += o.quantity;\n    });\n\n    let result = {};\n\n    for (var [key, arr] of map.entries()) {\n      if (key === null) {\n        result = arr.reduce((s, k) => ({...s, [k]: 'Please select a dish'}), result);\n      } else if (arr.length > 1) {\n        result = arr.reduce((s, k) => ({...s, [k]: 'Can\\'t select the same dish'}), result);\n      }\n    }\n\n    if (total < number) {\n      result['number'] = 'You need more food';\n    }\n\n    setValid(result);\n\n    return !Object.keys(result).length\n  }\n\n\n  return (\n    <div>\n      <div>\n        {\n          currentOrder.map((o, k) => (\n            <OrderInput\n              key={o.key}\n              dishes={dishes}\n              order={o}\n              onChangeOrder={onChangeOrder(o.key)}\n              onChangeQuantity={onChangeQuantity(o.key)}\n              ControlBtn={k === currentOrder.length - 1 ? <AddButton /> : <DelButton id={o.key} />}\n              err={valid[o.key]}\n            />\n          ))\n        }\n      </div>\n      {\n        valid.number && <ErrMsg>{valid.number}</ErrMsg>\n      }\n      <ButtonPanel>\n        <Button\n          onClick={()=> {\n            dispatch(setOrder({ orders: currentOrder }));\n            dispatch(clickPrevStep());\n          }}\n        >\n          PREV\n        </Button>\n        <Button\n          onClick={()=> {\n            if (!validate()) {\n              return\n            }\n            dispatch(setOrder({ orders: currentOrder }));\n            dispatch(clickNextStep());\n          }}\n        >\n          NEXT\n        </Button>\n      </ButtonPanel>\n    </div>\n  )\n}\n\nexport default Step3;\n","import React, { useState } from 'react';\nimport { Panel, Button, Notification } from 'rsuite';\nimport { useMappedState ,useDispatch} from 'redux-react-hook';\n\nimport {\n  formSelector,\n} from 'store/modules/form';\n\nimport {\n  clickPrevStep,\n} from 'store/modules/ui';\n\nimport {\n  ButtonPanel,\n} from 'styles/pages';\n\nconst Step4 = () => {\n  const { meal, number, restaurant, orders } = useMappedState(formSelector);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <div>\n        <Panel header='Order Confirm' bordered>\n          <p>meal:{meal}</p>\n          <p>number:{number}</p>\n          <p>restaurant:{restaurant}</p>\n          <p>orders:</p>\n          <Panel>\n            {orders.map(o => <p key={o.key}>{`${o.dish.name} - ${o.quantity}`}</p>)}\n          </Panel>\n        </Panel>\n      </div>\n      <ButtonPanel>\n        <Button\n          onClick={()=> { dispatch(clickPrevStep()) }}\n        >\n          PREV\n        </Button>\n        <Button\n          onClick={()=> {\n            console.log(\"Your order is here.\", { meal, number, restaurant, orders });\n            Notification['success']({\n              title: 'success',\n              description: <div>Please checck your console log</div>\n            })\n          }}\n        >\n          SUBMIT\n        </Button>\n      </ButtonPanel>\n    </div>\n  )\n}\n\nexport default Step4;\n","import React from 'react';\nimport { Stepper } from 'container';\n\nconst Page = (props) => {\n  return (\n    <div>\n      <div>\n        <Stepper />\n      </div>\n      <div>\n        {props.children}\n      </div>\n    </div>\n  )\n}\n\n\nexport default Page;\n","import React from 'react';\nimport { SelectPicker, InputNumber } from 'rsuite';\n\nimport {\n  ErrMsg,\n} from 'styles/pages';\n\nconst OrderInput = ({dishes, order, onChangeOrder, onChangeQuantity, err, ControlBtn}) => {\n  return (\n    <>\n      <div>Please select a meal</div>\n      <div>\n        <SelectPicker\n          data={dishes.map(d => ({ label: d.name, value: d }))}\n          searchable={false}\n          value={order.dish}\n          onChange={onChangeOrder}\n        />\n      </div>\n      {\n        err && <ErrMsg>{err}</ErrMsg>\n      }\n      <div>Please select quantity</div>\n      <div>\n          <InputNumber\n            min={1}\n            max={10}\n            value={order.quantity}\n            onChange={onChangeQuantity}\n          />\n      </div>\n      {ControlBtn}\n    </>\n  )\n}\n\n\nexport default OrderInput;\n","\nimport React from 'react';\nimport { Page } from './components';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport {useMappedState} from 'redux-react-hook';\nimport { uiSelector } from 'store/modules/ui';\nimport { Step1, Step2, Step3, Step4 } from 'container';\n\ntype Props = {}\n\nconst App = () => {\n  const { step } = useMappedState(uiSelector);\n\n  const renderSwitch = (step) => {\n    switch(step) {\n      case 0:\n        return <Step1 />\n      case 1:\n        return <Step2 />\n      case 2:\n        return <Step3 />\n      case 3:\n        return <Step4 />\n      default:\n        return null\n    }\n  }\n  return (\n    <Page>\n      {renderSwitch(step)}\n    </Page>\n  )\n}\n\n\nexport default App;\n","import { combineReducers } from 'redux'\nimport dishesReducer from './dishes';\nimport uiReducer from './ui';\nimport formReducer from './form';\n\nconst rootReducer = combineReducers({\n  dishes: dishesReducer,\n  ui: uiReducer,\n  form: formReducer,\n});\n\n\nexport default rootReducer;\n","import configureStore from './configureStore';\n\nexport default configureStore;\n","import { createStore } from 'redux';\nimport rootReducer from './modules';\n\nexport default function configureStore() {\n\n  const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n  return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\nimport {StoreContext} from 'redux-react-hook';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nconst store = configureStore();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <App/>\n  </StoreContext.Provider>\n  , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}